#!/usr/bin/python2.7
#discover hidden directory by bruteforceing common directory name 
#if we get a respond then their is a directory then we also get the recursive of the directory.

import sys
import os
import requests

class DiscoverAllDirectoryInDomain:
  def __init__(self) -> None:
    try:
      self.results = []
      self.WordList = "wordlists/common_dir.txt"

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

  def request(self, url):
    try:
      return requests.get("http://" + url)

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

  def dirdiscover(self, url):
    try:
      with open(self.WordList, "r") as wordlist_file:
        for line in wordlist_file:
          word = line.strip()
          test_url = url + "/" + word
          response = self.request(test_url)

          if response.status_code == 200:
            print(response.status_code, "\t", test_url)
            # self.results.append(word)

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

  def run(self, url):
    try:
      self.dirdiscover(url)
        
      for paths in self.results:
        self.dirdiscover(url + "/" + paths)

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

if __name__ == "__main__":
  p = DiscoverAllDirectoryInDomain()
  p.run("www.google.com")








# path = []

# def request(url):
# 	try:
# 		return requests.get("http://" + url)
# 	except requests.exceptions.ConnectionError:
# 		pass

# def dirdiscover(url):
# 	with open("tools/common_dir.txt","r") as wordlist_file:
# 		for line in wordlist_file:
# 			word = line.strip()
# 			test_url = url + "/" + word
# 			response = request(test_url)
# 			if response :
# 				print("[+] Discovered URL ----> " + test_url)
# 				path.append(word)

# def lunch(url):
# 	dirdiscover(url)
		
# 	for paths in path:
# 		dirdiscover(url+"/"+ paths)


