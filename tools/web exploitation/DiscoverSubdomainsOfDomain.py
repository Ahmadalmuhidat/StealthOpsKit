#!/usr/bin/python2.7
#dicover subdomains of domain by bruteforcing common sub domains to the domain and
#if we get a respond then the sub-domain exist

import os
import sys
import requests
from datetime import datetime

class DiscoverSubdomainsOfDomain:
  def __init__(self) -> None:
    try:
      self.Path = []
      self.WordList = "wordlists/subdomains_20000.txt"
      self.TotalTimeTaken = ""

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

  def request(self, url):
    try:
      return requests.get("http://" + url)

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]


  def lunch(self, url):
    try:
      start = datetime.now()

      with open(self.WordList ,"r") as wordlist_file:
        for line in wordlist_file:
          word = line.strip()
          test_url = word + "." + url
          response = self.request(test_url)

          if response and response.status_code == 200:
            print(response.status_code, "\t", test_url)

      stop = datetime.now()
      self.TotalTimeTaken = stop - start

    except Exception as e:
      exc_type, exc_obj, exc_tb = sys.exc_info()
      fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
      print(exc_type, fname, exc_tb.tb_lineno)
      print(exc_obj)

if __name__ == "__main__":
  p = DiscoverSubdomainsOfDomain()
  p.lunch("facebook.com")

# start=datetime.now()

# def request(url):
# 	try:
# 		return requests.get("http://" + url)
# 	except requests.exceptions.ConnectionError:
# 		pass

# def lunch(url):
# 	# file = open("googlesubdomain.txt","aw")

# 	with open("tools/subdomains_20000.txt","r") as wordlist_file:
# 		for line in wordlist_file:
# 			word = line.strip()
# 			test_url = word + "." + url
# 			response = request(test_url)
# 			if response :
# 				print("[+] Discovered subdomain ----> " + test_url)
# 				# file.write(test_url+"\n")
# 	# file.close()

# 	stop= datetime.now()

# 	totaltime= stop - start
# 	print("\n[***]TotalTimeTaken = ", totaltime)
